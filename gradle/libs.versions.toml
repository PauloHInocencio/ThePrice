[versions]
agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "25"
android-targetSdk = "34"
activityCompose = "1.10.0"
appcompat = "1.6.1"
constraintLayout = "2.1.4"
coreKtx = "1.13.0"
espresso = "3.5.1"
material = "1.11.0"
androidxJunit = "1.1.5"
androidXTest = '1.6.1'
compose = "1.7.6"
composePlugin = "1.6.11"
junit = "4.13.2"
kotlin = "2.1.0"
ksp = "2.1.0-1.0.29"

lifecycle = "2.9.0-alpha08"
androidxLifecycle = "2.8.7"
koin = "3.6.0-alpha3"
koinCompose = "1.2.0-alpha3"
koinComposeViewModel = "1.2.0-Beta5"
navigationCompose = "2.7.0-alpha07"
room = "2.7.0-alpha12"
sqlite = "2.5.0-alpha12"
kotlinxDateTime = "0.6.0"
turbine = "1.1.0"
coroutines = "1.8.1"
mockk = "1.13.12"
roboletric = "4.13"
testRunnerVersion = "1.6.2"
credentials = "1.3.0"
googleid = "1.1.1"
ktor = "2.3.12"

[libraries]
# Kotlix DateTime
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime"}

# Lifecycle
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }
lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }

# Coroutines
kotlinx-coroutines-core = {module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref="coroutines"}
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }

#Room
androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeViewModel" }

# Compose
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }

# Credential Manager
credentials = { module = "androidx.credentials:credentials", version.ref = "credentials"}
credentials-auth = {module = "androidx.credentials:credentials-play-services-auth", version.ref = "credentials"}
googleid = { module = "com.google.android.libraries.identity.googleid:googleid",  version.ref = "googleid"}


# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

# Unit Testing
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin"}
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines"}
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine"}
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin"}
mockk = { module = "io.mockk:mockk", version.ref = "mockk"}
androidx-test-core = { module ="androidx.test:core", version.ref = "androidXTest" }
junit = { module = "junit:junit", version.ref = "junit"}
roboletric = { module = "org.robolectric:robolectric", version.ref = "roboletric"}

# UI Testing
compose-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android",  version.ref = "compose"}
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "composePlugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
androidxRoom = { id = "androidx.room", version.ref = "room" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

[bundles]
ktor = [
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-client-auth",
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json",
]